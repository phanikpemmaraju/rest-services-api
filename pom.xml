<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>uk.co.legacy.it.services</groupId>
    <artifactId>rest-services-api</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Rest Services Api</name>
    <description>ReST Services for legacy IT</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <repositories>
        <repository>
            <id>artifactory</id>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>artifactory</id>
            <url>https://repo.maven.apache.org/maven2/</url>
        </pluginRepository>
    </pluginRepositories>



    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>

        <!-- Plugins -->
        <dockerfile.repository>${DOCKER_REPOSITORY}</dockerfile.repository>
        <dockerfile.tag>${DOCKER_TAG}</dockerfile.tag>
        <skipUnitTests>${skipTests}</skipUnitTests>
        <e2e.composeFile>${project.basedir}/src/e2e/docker-compose.yml</e2e.composeFile>
    </properties>

    <profiles>
        <profile>
            <id>e2e</id>
            <properties>
                <skipUnitTests>true</skipUnitTests>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <dockerfile.tag>latest</dockerfile.tag>
                <dockerfile.repository>legacy-it/rest-services-api</dockerfile.repository>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- lombok dependency -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Spring open api doc dependency -->

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.2.28</version>
        </dependency>

        <!-- Test dependency -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>uk.co.legacy.it.RestServicesApiApplication</mainClass>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArguments>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </compilerArguments>
                </configuration>
            </plugin>

            <!-- Unit test plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkCount>0</forkCount>
                    <skipTests>${skipUnitTests}</skipTests>
                </configuration>
            </plugin>

            <!-- Integration test plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <forkCount>0</forkCount>
                </configuration>
                <executions>
                    <execution>
                        <id>it-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- E2E plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <configuration>
                    <executable>docker-compose</executable>
                </configuration>
                <executions>
                    <execution>
                        <id>up</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <arguments>
                                <argument>--file</argument>
                                <argument>${e2e.composeFile}</argument>
                                <argument>up</argument>
                                <argument>-d</argument>
                                <argument>--build</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>down</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <arguments>
                                <argument>--file</argument>
                                <argument>${e2e.composeFile}</argument>
                                <argument>down</argument>
                                <argument>-v</argument>
                                <argument>--remove-orphans</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>wait-for-services</id>
                        <phase>integration-test</phase>
                        <configuration>
                            <target>
                                <echo>Waiting for services to come up...</echo>
                                <waitfor maxwait="2" maxwaitunit="minute" checkevery="250" timeoutproperty="wait-for-services-timeout">
                                    <and>
                                        <http url="http://localhost:18010/manage/health"/>
                                    </and>
                                </waitfor>
                                <fail if="wait-for-services-timeout">Services did not start in time</fail>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Docker build maven plugin -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.3.6</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <buildArgs>
                        <JAR_FILE>target/${project.artifactId}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>